import { Socket } from 'node:net';
import { PlistService, } from './lib/plist/plist-service.js';
/**
 * Base class for services that use PlistService for communication
 */
export class BasePlistService {
    /**
     * Sends a message and waits for a response
     * @param message The message to send
     * @param timeout Timeout in milliseconds
     * @returns Promise resolving to the response
     */
    async sendAndReceive(message, timeout) {
        return this._plistService.sendPlistAndReceive(message, timeout);
    }
    /**
     * Closes the underlying connection
     */
    close() {
        this._plistService.close();
    }
    /**
     * Waits for a message
     * @param timeout Timeout in milliseconds
     * @returns Promise resolving to the received message
     */
    async receive(timeout) {
        return this._plistService.receivePlist(timeout);
    }
    /**
     * Gets the PlistService instance
     * @returns The PlistService instance
     */
    getPlistService() {
        return this._plistService;
    }
    /**
     * The underlying PlistService instance
     */
    _plistService;
    /**
     * Creates a new BasePlistService
     * @param plistServiceOrSocket PlistService instance or Socket
     * @param options Configuration options for PlistService
     */
    constructor(plistServiceOrSocket, options = {}) {
        if (plistServiceOrSocket instanceof PlistService) {
            this._plistService = plistServiceOrSocket;
        }
        else {
            this._plistService = new PlistService(plistServiceOrSocket, options);
        }
    }
    /**
     * Sends a message without waiting for a response
     * @param message The message to send
     */
    send(message) {
        this._plistService.sendPlist(message);
    }
}
