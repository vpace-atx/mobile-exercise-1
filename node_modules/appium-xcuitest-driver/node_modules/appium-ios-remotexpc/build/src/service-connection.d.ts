import net from 'node:net';
import { BasePlistService } from './base-plist-service.js';
import type { PlistServiceOptions } from './lib/plist/plist-service.js';
import type { PlistDictionary } from './lib/types.js';
export interface ServiceConnectionOptions {
    keepAlive?: boolean;
    createConnectionTimeout?: number;
    plistOptions?: PlistServiceOptions;
}
/**
 * ServiceConnection for communicating with Apple device services over TCP
 */
export declare class ServiceConnection extends BasePlistService {
    constructor(socket: net.Socket, options?: ServiceConnectionOptions);
    /**
     * Creates a TCP connection to the specified host and port
     */
    static createUsingTCP(hostname: string, port: string, options?: ServiceConnectionOptions): Promise<ServiceConnection>;
    /**
     * Sends a plist request to the device and returns the response
     */
    sendPlistRequest(requestObj: PlistDictionary, timeout?: number): Promise<PlistDictionary>;
    /**
     * Gets the underlying socket
     * @returns The socket used by this service
     */
    getSocket(): net.Socket;
    /**
     * Closes the connection
     */
    close(): void;
}
export default ServiceConnection;
//# sourceMappingURL=service-connection.d.ts.map