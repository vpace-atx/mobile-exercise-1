/**
 * Interface defining the structure of a pair record.
 */
export interface PairRecord {
    HostID: string | null;
    SystemBUID: string | null;
    HostCertificate: string | null;
    HostPrivateKey: string | null;
    DeviceCertificate: string | null;
    RootCertificate: string | null;
    RootPrivateKey: string | null;
    WiFiMACAddress: string | null;
    EscrowBag: string | null;
}
/**
 * Interface for the raw response from plist.parsePlist
 */
export interface RawPairRecordResponse {
    HostID: string;
    SystemBUID: string;
    HostCertificate: Buffer;
    HostPrivateKey: Buffer;
    DeviceCertificate: Buffer;
    RootCertificate: Buffer;
    RootPrivateKey: Buffer;
    WiFiMACAddress: string;
    EscrowBag: Buffer;
}
/**
 * Processes raw response from plist.parsePlist and formats it into a proper pair-record
 * @param response - Response from plist.parsePlist(data.payload.PairRecordData)
 * @returns Formatted pair-record object with properly structured data
 */
export declare function processPlistResponse(response: RawPairRecordResponse): PairRecord;
/**
 * Saves a pair record to the filesystem.
 * @param udid - Device UDID.
 * @param pairRecord - Pair record to save.
 * @returns Promise that resolves when record is saved.
 */
export declare function savePairRecord(udid: string, pairRecord: PairRecord): Promise<void>;
/**
 * Gets a saved pair record from the filesystem.
 * @param udid - Device UDID.
 * @returns Promise that resolves with the pair record or null if not found.
 */
export declare function getPairRecord(udid: string): Promise<PairRecord | null>;
//# sourceMappingURL=pair-record.d.ts.map