import type { PairingDataComponentTypeValue, TLV8Item } from '../types.js';
/**
 * Decodes a TLV8-formatted buffer into an array of TLV8 items.
 *
 * @param buffer - A Node.js Buffer containing TLV8 encoded data
 * @returns Array of TLV8Item objects with `type` and `data`
 * @throws TLV8Error if the buffer does not contain valid TLV8 data
 */
export declare function decodeTLV8(buffer: Buffer): TLV8Item[];
/**
 * Decodes a TLV8-formatted buffer into a dictionary mapping
 * each TLV8 type to its corresponding data buffer. If the same
 * type occurs more than once, their values are concatenated.
 *
 * @param buffer - A Node.js Buffer containing TLV8 encoded data
 * @returns A dictionary of type-value mappings
 */
export declare function decodeTLV8ToDict(buffer: Buffer): Partial<Record<PairingDataComponentTypeValue, Buffer>>;
//# sourceMappingURL=decoder.d.ts.map