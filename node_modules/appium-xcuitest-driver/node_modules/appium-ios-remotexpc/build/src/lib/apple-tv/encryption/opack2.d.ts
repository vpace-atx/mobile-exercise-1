interface SerializableArray extends Array<SerializableValue> {
}
interface SerializableObject extends Record<string, SerializableValue> {
}
type SerializableValue = null | undefined | boolean | number | string | Buffer | SerializableArray | SerializableObject;
/**
 * OPACK2 binary serialization format encoder
 * Implements Apple's OPACK2 protocol for efficient binary serialization of structured data
 */
export declare class Opack2 {
    /**
     * Serializes a JavaScript object to OPACK2 binary format
     * @param obj - The object to serialize (supports primitives, arrays, objects, and Buffers)
     * @returns Buffer containing the serialized data
     * @throws AppleTVError if the object contains unsupported types
     */
    static dumps(obj: SerializableValue): Buffer;
    /**
     * Main encoding dispatcher that routes values to appropriate type-specific encoders
     * @param obj - Value to encode
     * @returns Buffer containing encoded value
     * @throws AppleTVError for unsupported types
     */
    private static encode;
    /**
     * Encodes numeric values with the appropriate size optimization
     * @param num - Number to encode
     * @returns Buffer containing encoded number
     */
    private static encodeNumber;
    /**
     * Encodes UTF-8 strings with length-optimized headers
     * @param str - String to encode
     * @returns Buffer containing encoded string
     */
    private static encodeString;
    /**
     * Encodes binary data with length-optimized headers
     * @param bytes - Buffer to encode
     * @returns Buffer containing encoded binary data
     */
    private static encodeBytes;
    /**
     * Encodes arrays with count-optimized headers
     * @param arr - Array to encode
     * @returns Buffer containing encoded array
     */
    private static encodeArray;
    /**
     * Encodes objects/dictionaries with count-optimized headers
     * @param dict - Object to encode
     * @returns Buffer containing encoded dictionary
     */
    private static encodeDict;
}
export {};
//# sourceMappingURL=opack2.d.ts.map