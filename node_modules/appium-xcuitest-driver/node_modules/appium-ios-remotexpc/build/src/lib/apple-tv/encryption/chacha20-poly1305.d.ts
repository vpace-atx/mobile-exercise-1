export interface ChaCha20Poly1305Params {
    plaintext?: Buffer;
    ciphertext?: Buffer;
    key: Buffer;
    nonce: Buffer;
    aad?: Buffer;
}
/**
 * Encrypts data using ChaCha20-Poly1305 AEAD cipher
 * @param params - Encryption parameters including plaintext, key, nonce, and optional AAD
 * @returns Buffer containing encrypted data concatenated with authentication tag
 * @throws CryptographyError if encryption fails or required parameters are missing
 */
export declare function encryptChaCha20Poly1305(params: ChaCha20Poly1305Params): Buffer;
/**
 * Decrypts data using ChaCha20-Poly1305 AEAD cipher with multiple fallback strategies
 * @param params - Decryption parameters including ciphertext, key, nonce, and optional AAD
 * @returns Buffer containing decrypted plaintext
 * @throws CryptographyError if all decryption attempts fail or required parameters are missing
 */
export declare function decryptChaCha20Poly1305(params: ChaCha20Poly1305Params): Buffer;
//# sourceMappingURL=chacha20-poly1305.d.ts.map