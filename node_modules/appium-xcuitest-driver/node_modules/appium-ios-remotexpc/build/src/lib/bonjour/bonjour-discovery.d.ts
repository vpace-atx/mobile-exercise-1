import { EventEmitter } from 'node:events';
/**
 * Interface for a discovered Bonjour service
 */
export interface BonjourService {
    name: string;
    type: string;
    domain: string;
    hostname?: string;
    port?: number;
    txtRecord?: Record<string, string>;
    interfaceIndex?: number;
}
/**
 * Interface for AppleTV device discovered via Bonjour
 */
export interface AppleTVDevice {
    name: string;
    identifier: string;
    hostname: string;
    ip?: string;
    port: number;
    model: string;
    version: string;
    minVersion: string;
    authTag?: string;
    interfaceIndex?: number;
}
/**
 * Type alias for service discovery results
 */
export type ServiceDiscoveryResult = Array<{
    action: string;
    service: BonjourService;
}>;
export declare class BonjourDiscovery extends EventEmitter {
    private _browseProcess?;
    private _isDiscovering;
    private readonly _discoveredServices;
    /**
     * Start browsing for Bonjour services
     */
    startBrowsing(serviceType?: string, domain?: string): Promise<void>;
    /**
     * Stop browsing for services
     */
    stopBrowsing(): void;
    /**
     * Get all discovered services
     */
    getDiscoveredServices(): BonjourService[];
    /**
     * Resolve a specific service to get detailed information
     */
    resolveService(serviceName: string, serviceType?: string, domain?: string): Promise<BonjourService>;
    /**
     * Discover Apple TV devices with IP address resolution
     */
    discoverAppleTVDevicesWithIP(timeoutMs?: number): Promise<AppleTVDevice[]>;
    /**
     * Process browse output using the parser
     */
    processBrowseOutput(output: string): void;
    /**
     * Initialize a browsing process
     */
    private initializeBrowsing;
    /**
     * Setup event handlers for an ongoing browse process
     */
    private setupBrowseEventHandlers;
    /**
     * Resolve all discovered services
     */
    private resolveAllServices;
    /**
     * Cleanup resources
     */
    private cleanup;
}
//# sourceMappingURL=bonjour-discovery.d.ts.map