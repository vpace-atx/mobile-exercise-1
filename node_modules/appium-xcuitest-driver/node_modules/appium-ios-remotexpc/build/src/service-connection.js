import net from 'node:net';
import { BasePlistService } from './base-plist-service.js';
/**
 * ServiceConnection for communicating with Apple device services over TCP
 */
export class ServiceConnection extends BasePlistService {
    constructor(socket, options) {
        super(socket, options?.plistOptions);
    }
    /**
     * Creates a TCP connection to the specified host and port
     */
    static createUsingTCP(hostname, port, options) {
        const keepAlive = options?.keepAlive ?? true;
        const createConnectionTimeout = options?.createConnectionTimeout ?? 30000;
        return new Promise((resolve, reject) => {
            const socket = net.createConnection({ host: hostname, port: Number(port) }, () => {
                socket.setTimeout(0);
                if (keepAlive) {
                    socket.setKeepAlive(true);
                }
                resolve(new ServiceConnection(socket, options));
            });
            socket.setTimeout(createConnectionTimeout, () => {
                socket.destroy();
                reject(new Error('Connection timed out'));
            });
            socket.on('error', (err) => reject(err));
        });
    }
    /**
     * Sends a plist request to the device and returns the response
     */
    sendPlistRequest(requestObj, timeout = 10000) {
        return this.sendAndReceive(requestObj, timeout);
    }
    /**
     * Gets the underlying socket
     * @returns The socket used by this service
     */
    getSocket() {
        return this.getPlistService().getSocket();
    }
    /**
     * Closes the connection
     */
    close() {
        super.close();
    }
}
export default ServiceConnection;
