import type { DiagnosticsService as DiagnosticsServiceInterface, PlistDictionary } from '../../../lib/types.js';
import { BaseService } from '../base-service.js';
/**
 * DiagnosticsService provides an API to:
 * - Query MobileGestalt & IORegistry keys
 * - Reboot, shutdown or put the device in sleep mode
 * - Get WiFi information
 */
declare class DiagnosticsService extends BaseService implements DiagnosticsServiceInterface {
    static readonly RSD_SERVICE_NAME = "com.apple.mobile.diagnostics_relay.shim.remote";
    constructor(address: [string, number]);
    /**
     * Restart the device
     * @returns Promise that resolves when the restart request is sent
     */
    restart(): Promise<PlistDictionary>;
    /**
     * Shutdown the device
     * @returns Promise that resolves when the shutdown request is sent
     */
    shutdown(): Promise<PlistDictionary>;
    /**
     * Put the device in sleep mode
     * @returns Promise that resolves when the sleep request is sent
     */
    sleep(): Promise<PlistDictionary>;
    /**
     * Query IORegistry
     * @returns Object containing the IORegistry information
     * @param options
     */
    ioregistry(options?: {
        plane?: string;
        name?: string;
        ioClass?: string;
        returnRawJson?: boolean;
        timeout?: number;
    }): Promise<PlistDictionary[] | Record<string, any>>;
    private getServiceConfig;
    private connectToDiagnosticService;
    private sendRequest;
    private processIORegistryResponse;
    private handleMultipartIORegistryResponse;
}
export default DiagnosticsService;
//# sourceMappingURL=index.d.ts.map