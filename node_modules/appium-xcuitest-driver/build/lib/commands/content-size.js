"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const lodash_1 = __importDefault(require("lodash"));
const utils_1 = require("../utils");
const driver_1 = require("appium/driver");
const assertSimulator = lodash_1.default.partial(utils_1.assertSimulator, 'Content size ui command');
const CONTENT_SIZE = [
    'extra-small',
    'small',
    'medium',
    'large',
    'extra-large',
    'extra-extra-large',
    'extra-extra-extra-large',
    'accessibility-medium',
    'accessibility-large',
    'accessibility-extra-large',
    'accessibility-extra-extra-large',
    'accessibility-extra-extra-extra-large',
    'increment',
    'decrement'
];
exports.default = {
    /**
     * Sets content size for the given simulator.
     *
     * @since Xcode 15 (but lower xcode could have this command)
     * @param {ContentSizeAction} size - The content size action to set. Acceptable value is
     *                                   extra-small, small, medium, large, extra-large, extra-extra-large,
     *                                   extra-extra-extra-large, accessibility-medium, accessibility-large,
     *                                   accessibility-extra-large, accessibility-extra-extra-large,
     *                                   accessibility-extra-extra-extra-large with Xcode 16.2.
     * @throws {Error} if the current platform does not support content size appearance changes
     * @this {XCUITestDriver}
     */
    async mobileSetContentSize(size) {
        const simulator = assertSimulator(this);
        if (!CONTENT_SIZE.includes(lodash_1.default.lowerCase(size))) {
            throw new driver_1.errors.InvalidArgumentError(`The 'size' value is expected to be one of ${CONTENT_SIZE.join(',')}`);
        }
        await simulator.setContentSize(size);
    },
    /**
     * Retrieves the current content size value from the given simulator.
     *
     * @since Xcode 15 (but lower xcode could have this command)
     * @returns {Promise<ContentSizeResult>} the content size value. Possible return value is
     *                                 extra-small, small, medium, large, extra-large, extra-extra-large,
     *                                 extra-extra-extra-large, accessibility-medium, accessibility-large,
     *                                 accessibility-extra-large, accessibility-extra-extra-large,
     *                                 accessibility-extra-extra-extra-large,
     *                                 unknown or unsupported with Xcode 16.2.
     * @this {XCUITestDriver}
     */
    async mobileGetContentSize() {
        return /** @type {ContentSizeResult} */ (await assertSimulator(this).getContentSize());
    },
};
/**
 * @typedef {import('../driver').XCUITestDriver} XCUITestDriver
 * @typedef {import('./types').ContentSizeAction} ContentSizeAction
 * @typedef {import('./types').ContentSizeResult} ContentSizeResult
 */
//# sourceMappingURL=content-size.js.map