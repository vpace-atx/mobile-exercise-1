/**
 * @deprecated
 * @this {import('../driver').AndroidDriver}
 * @param {string?} [elementId=null]
 * @param {number?} [x=null]
 * @param {number?} [y=null]
 * @param {number} [count=1]
 * @returns {Promise<void>}
 */
export function tap(this: import("../driver").AndroidDriver, elementId?: string | null | undefined, x?: number | null | undefined, y?: number | null | undefined, count?: number | undefined): Promise<void>;
/**
 * @deprecated
 * @this {import('../driver').AndroidDriver}
 * @param {string} elementId
 * @param {number} x
 * @param {number} y
 * @param {number} duration
 * @returns {Promise<void>}
 */
export function touchLongClick(this: import("../driver").AndroidDriver, elementId: string, x: number, y: number, duration: number): Promise<void>;
/**
 * @deprecated
 * @this {import('../driver').AndroidDriver}
 * @param {string} elementId
 * @param {number} x
 * @param {number} y
 * @returns {Promise<void>}
 */
export function touchDown(this: import("../driver").AndroidDriver, elementId: string, x: number, y: number): Promise<void>;
/**
 * @deprecated
 * @this {import('../driver').AndroidDriver}
 * @param {string} elementId
 * @param {number} x
 * @param {number} y
 * @returns {Promise<void>}
 */
export function touchUp(this: import("../driver").AndroidDriver, elementId: string, x: number, y: number): Promise<void>;
/**
 * @deprecated
 * @this {import('../driver').AndroidDriver}
 * @param {string} elementId
 * @param {number} x
 * @param {number} y
 * @returns {Promise<void>}
 */
export function touchMove(this: import("../driver").AndroidDriver, elementId: string, x: number, y: number): Promise<void>;
/**
 * @deprecated
 * @this {import('../driver').AndroidDriver}
 * @param {import('./types').SwipeOpts} opts
 * @returns {Promise<void>}
 */
export function doSwipe(this: import("../driver").AndroidDriver, opts: import('./types').SwipeOpts): Promise<void>;
/**
 * @deprecated
 * @this {import('../driver').AndroidDriver}
 * @param {import('./types').TouchDragAction} opts
 * @returns {Promise<void>}
 */
export function doTouchDrag(this: import("../driver").AndroidDriver, opts: import('./types').TouchDragAction): Promise<void>;
/**
 * @deprecated
 * @this {import('../driver').AndroidDriver}
 * @param {import('./types').TouchActionKind} action
 * @param {import('./types').TouchActionOpts} [opts={}]
 * @returns {Promise<void>}
 */
export function doTouchAction(this: import("../driver").AndroidDriver, action: import('./types').TouchActionKind, opts?: import("./types").TouchActionOpts | undefined): Promise<void>;
/**
 * @deprecated
 * @this {import('../driver').AndroidDriver}
 * @param {import('./types').TouchAction[]} gestures
 * @returns {Promise<void>}
 */
export function performTouch(this: import("../driver").AndroidDriver, gestures: import('./types').TouchAction[]): Promise<void>;
/**
 * @deprecated
 * @this {import('../driver').AndroidDriver}
 * @param {import('./types').TouchAction[]} actions
 * @param {string} elementId
 * @returns {Promise<void>}
 */
export function performMultiAction(this: import("../driver").AndroidDriver, actions: import('./types').TouchAction[], elementId: string): Promise<void>;
/**
 * @deprecated
 * @this {import('../driver').AndroidDriver}
 * @param {string} elementId
 * @param {import('./types').TouchState[]} states
 * @returns {Promise<void>}
 */
export function doPerformMultiAction(this: import("../driver").AndroidDriver, elementId: string, states: import('./types').TouchState[]): Promise<void>;
/**
 * @deprecated
 * @param {number} number
 * @param {number} digits
 * @returns {number}
 */
export function truncateDecimals(number: number, digits: number): number;
export type ADB = import('appium-adb').ADB;
export type TouchAction = import('./types').TouchAction;
export type NonReleaseTouchAction = import('./types').NonReleaseTouchAction;
//# sourceMappingURL=touch.d.ts.map